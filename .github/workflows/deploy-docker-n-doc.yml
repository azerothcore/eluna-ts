name: docker-n-doc-build
on:
  push:
    branches:
      - 'master'
  pull_request:

jobs:
  build-n-deploy:
    strategy:
      fail-fast: true
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2

      - name: Extract branch name
        shell: bash
        run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
        id: extract_branch

      - name: Generate resources
        run: |
          npm install
          npm run test
          npm run doc:gen
          git pull

      - name: Update resources
        uses: test-room-7/action-update-file@v1
        with:
          file-path: dist/*
          commit-msg: Update dist
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Pull latest changes
        run: |
          git pull

      - name: Update version in package.json
        uses:  'phips28/gh-action-bump-version@master'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PACKAGEJSON_DIR: deps/eluna-ts-lib
        with:
          tag-prefix:  'lib-'

      - name: Deploy to GH Pages
        if: ${{ steps.extract_branch.outputs.branch == 'master' }}
        uses: JamesIves/github-pages-deploy-action@4.1.0
        with:
          branch: gh-pages
          folder: docs/typedoc
          target-folder: ${{ steps.extract_branch.outputs.branch }}
          clean: true # Automatically remove deleted files from the deploy branch

      - name: Login to Docker Hub
        if: ${{ steps.extract_branch.outputs.branch == 'master' }}
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Deploy Production images
        #env:
        #  DOCKER_IMAGE_TAG: ${{ steps.extract_branch.outputs.branch }}
        if: ${{ steps.extract_branch.outputs.branch == 'master' }}
        run: |
          docker-compose build eluna-ts-build
          docker-compose  push eluna-ts-build
